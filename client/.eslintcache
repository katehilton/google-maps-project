[{"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/index.js":"1","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reportWebVitals.js":"2","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/App.js":"3","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reducers/index.js":"4","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reducers/mapReducer.js":"5","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Header.js":"6","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Map.js":"7","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Menu.js":"8","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Location.js":"9","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/LocationDetails.js":"10","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SearchBar.js":"11","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SearchButton.js":"12","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SaveButton.js":"13","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/AddButton.js":"14","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Message.js":"15","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/CloseButton.js":"16","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/actions/index.js":"17","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/actions/types.js":"18","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/firebase.js":"19"},{"size":856,"mtime":1607307651984,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":454,"mtime":1607308162202,"results":"23","hashOfConfig":"21"},{"size":137,"mtime":1607137314970,"results":"24","hashOfConfig":"21"},{"size":2198,"mtime":1607401442427,"results":"25","hashOfConfig":"21"},{"size":321,"mtime":1607299416983,"results":"26","hashOfConfig":"21"},{"size":2579,"mtime":1607319020891,"results":"27","hashOfConfig":"21"},{"size":1540,"mtime":1607319584424,"results":"28","hashOfConfig":"21"},{"size":1031,"mtime":1607316064711,"results":"29","hashOfConfig":"21"},{"size":2686,"mtime":1607316617919,"results":"30","hashOfConfig":"21"},{"size":1162,"mtime":1607319768552,"results":"31","hashOfConfig":"21"},{"size":511,"mtime":1607295320158,"results":"32","hashOfConfig":"21"},{"size":584,"mtime":1607315670100,"results":"33","hashOfConfig":"21"},{"size":839,"mtime":1607400218233,"results":"34","hashOfConfig":"21"},{"size":505,"mtime":1607307556566,"results":"35","hashOfConfig":"21"},{"size":563,"mtime":1607306917080,"results":"36","hashOfConfig":"21"},{"size":5572,"mtime":1607401503362,"results":"37","hashOfConfig":"21"},{"size":343,"mtime":1607401370498,"results":"38","hashOfConfig":"21"},{"size":189,"mtime":1607401156737,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"wfebq9",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"42"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/index.js",[],["83","84"],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reportWebVitals.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/App.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reducers/index.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/reducers/mapReducer.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Header.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Map.js",["85","86"],"import React, { useState } from 'react';\nimport GoogleMapReact from 'google-map-react';\nimport { connect } from 'react-redux';\nimport { getPlace } from '../actions';\nimport SearchBar from './SearchBar';\nimport Message from './Message';\n\n\nconst start = {\n    center: {\n        lat: 59.95,\n        lng: 30.33\n    },\n    zoom: 11,\n    name: 'where should we go today?'\n};\n\n\nfunction Map({ message, location, getPlace}) {\n    const [map, setMap] = useState(null);\n    const [maps, setMaps] = useState(null);\n    \n    const getLocation = (search) => {\n        var myDiv = document.getElementById(\"map\");\n        let size;\n        if (myDiv){\n            size={\n                height: myDiv.clientHeight,\n                width : myDiv.clientWidth\n            }\n        }\n\n        getPlace(search, size);\n    } \n\n    return (\n        <div id=\"map\" style={{flex:3, position: 'relative'}}>\n            <GoogleMapReact\n                bootstrapURLKeys={{ key: 'AIzaSyDo0XcuRC4tsR_yl5HgmTJM_LwEoDizWBU'}}\n                defaultCenter={start.center}\n                defaultZoom={start.zoom}\n                center={location.center}\n                zoom={location.zoom}\n                onGoogleApiLoaded={({ gmap, gmaps }) => {\n                    setMap(gmap);\n                    setMaps(gmaps);\n                }}\n                // onChange={renderMarkers}\n                yesIWantToUseGoogleMapApiInternals\n                \n            >\n                <div\n                    lat={location.center.lat}\n                    lng={location.center.lng}\n                    text=\"My Marker\"\n                >\n                    <i style={{fontSize: '30pt', color: 'magenta'}} className=\"fas fa-map-marker-alt\"></i>\n                </div>\n            </GoogleMapReact>\n            <div style={styles.message}><Message message={message}/></div>\n            <div style={styles.search}>\n                <SearchBar \n                    location={location}\n                    searchLocation={getLocation}\n                />\n            </div>\n        </div>\n    );\n}\n\nconst styles = {\n    search: {\n        position: 'absolute',\n        bottom: 10,\n        left: 110,\n        zIndex: 2,\n        width: '500px',\n        backgroundColor: 'blue'\n    },\n    message: {\n        position: 'absolute',\n        top: 10,\n        left: 90,\n        zIndex: 2\n    }\n}\n\nconst mapStateToProps = ({map}) => {\n    let { location, message } = map;\n    return { location, message}\n }\n \n const mapDispatchToProps = {\n   getPlace\n }\n\n export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Map);","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Menu.js",["87","88"],"\nimport { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { getLocations } from '../actions';\nimport Location from './Location';\nimport LocationDetails from './LocationDetails';\n\nfunction Menu({selectLocation, lKey, location, locations, getLocations}) {\n    const [loaded, setLoaded] = useState(false);\n    useEffect(() => {\n        getLocations();\n        setLoaded(true);\n      }, [])\n\n    const renderLocations = () => {\n        if (locations){\n            let keys = Object.keys(locations);\n            if (keys.length > 0) return keys.map(key => <Location id={key} lKey={key} location={locations[key]}/>)\n        }\n        \n    }\n\n    const renderDetails = () => {\n        if (selectLocation){\n           return  <LocationDetails lKey={lKey}/>\n        }\n    }\n\n    return (\n        <div style={{display: 'flex', flex:1,flexDirection: 'column', justifyContent: 'space-between'}}>\n            <ul className=\"collection with-header\">\n                <li className=\"collection-header\"><h4>Locations</h4></li>\n                <div style={{ maxHeight: '350px', overflow: 'auto', flexDirection: 'column'}}>{renderLocations()}</div>\n            </ul>\n           {renderDetails()}\n        </div>\n    );\n}\n\nconst mapStateToProps = ({map}) => {\n    let { selectLocation, location, locations } = map;\n    return {\n        selectLocation,\n        location,\n        locations\n  }\n }\n \n const mapDispatchToProps = {\n    getLocations\n }\n\n export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Menu);","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Location.js",["89"],"import { connect } from 'react-redux';\nimport { setLocation } from '../actions';\n\nfunction Location({setLocation, selectLocation, lKey, location}) {\n    if (location && selectLocation){\n        let selectAddress = selectLocation.location.location.formatted_address;\n        let address = location.location.location.formatted_address;\n        if (selectAddress == address){\n            return (\n                <li className=\"teal collection-item teal white-text\">\n                    {location.name}\n                </li>\n            );\n        }\n    }\n\n    return (\n        <li \n            className=\"collection-item \" \n            onClick={()=>{\n                setLocation(lKey, location)\n            }}\n            >\n                {location.name}\n            </li>\n    );\n}\n\nconst mapStateToProps = ({map}) => {\n    let { selectLocation } = map;\n    return {\n        selectLocation\n  }\n }\n \n const mapDispatchToProps = {\n    setLocation\n }\n\n export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(Location);","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/LocationDetails.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SearchBar.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SearchButton.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/SaveButton.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/AddButton.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/Message.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/CloseButton.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/actions/index.js",["90","91"],"import axios from 'axios';\nimport { fitBounds } from 'google-map-react';\nimport { \n    GET_PLACE, \n    ADD_LOCATION, \n    SET_LOCATION,\n    SET_SEARCH, \n    GET_LOCATIONS,\n    CLEAR_MESSAGE,\n    SAVE_DETAILS,\n    SET_MESSAGE\n} from './types';\nimport database from '../components/firebase';\n\nexport const setSearch = (search) => {\n    return function(dispatch){\n        dispatch({\n            type: SET_SEARCH,\n            payload: {search}\n        });\n    }\n}\n\nexport const getPlace = (search, size) => {\n    return function(dispatch){\n        if (search){\n            axios.get('/api/search-place' + '?search=' + search)\n            .then(res => {\n                if (res.data.place){\n                    let location = res.data.place;\n                    let bounds = location.geometry.viewport;\n                    bounds = {\n                        ne:bounds.northeast,\n                        sw:bounds.southwest\n                    }\n                    search = location.name +' - ' + location.formatted_address;\n                    \n                    if (location && size.height){\n                        const {center, zoom} = fitBounds(bounds, size);\n                        let loc = {center, zoom, location};\n                        dispatch({\n                            type: GET_PLACE,\n                            payload: {location:loc, search}\n                        });\n                    }\n                    else{\n                        dispatch({\n                            type: SET_MESSAGE,\n                            payload: 'Something went wrong. Please try again!'\n                        });\n                    }\n                }\n                else{\n                    dispatch({\n                        type: SET_MESSAGE,\n                        payload: res.data.error\n                    });\n                }\n                \n            })\n        }\n        else{\n            dispatch({\n                type: SET_MESSAGE,\n                payload: 'Please enter a search.'\n            });\n        }\n    }\n}\n\nexport const addLocation = (location, locations) => {\n    return function(dispatch){\n        if (location.location){\n            //check for dupes\n            let dup = false;\n            var keys = Object.keys(locations);\n            \n            keys.forEach(key => {\n                let address  = locations[key].location.location.formatted_address;\n                if (location.location.formatted_address == address){\n                    dup = true;\n                }\n            });\n            \n            if (dup){\n                dispatch({\n                    type: SET_MESSAGE,\n                    payload: \"Duplicate addresses can't be added.\"\n                });\n            }\n            else{\n                let name = location.location.name || '';\n                let type = location.location.types[0] || '';\n                let phone = location.location.formatted_phone_number || '';\n                let email = '';\n                let savedLocation = {\n                    name,\n                    type,\n                    phone,\n                    email,\n                    location\n                }\n\n                database.ref('/locations').push(savedLocation)\n                .then(res => {\n                    let key = res.key;\n                    database.ref('/locations').once('value', function(snap){\n                        let locations = snap.val();\n                        dispatch({\n                            type: ADD_LOCATION,\n                            payload: {locations, lKey: key, location: savedLocation, message: 'Location added!'}\n                        });\n                    })\n                })\n            }\n\n            \n\n        }\n        else{\n            dispatch({\n                type: SET_MESSAGE,\n                payload: 'Start by searching a location to add.'\n            });\n        }\n    }\n}\n\nexport const getLocations = () => {\n    return function(dispatch){\n        database.ref('/locations').once('value', function(snap){\n            let locations = snap.val();\n            dispatch({\n                type: GET_LOCATIONS,\n                payload: {locations}\n            });\n        })\n    }\n}\n\nexport const saveDetails = (lKey, details) => {\n    return function(dispatch){\n        database.ref(`/locations/${lKey}`).set(details)\n        .then(res => {\n            database.ref('/locations').once('value', function(snap){\n                let locations = snap.val();\n                dispatch({\n                    type: SAVE_DETAILS,\n                    payload: {\n                        locations, \n                        message: 'Details saved!',\n                        search: details.name + ' - ' + details.location.location.formatted_address\n                    }\n                });\n            })\n        })\n    }\n}\n\nexport const setLocation = (lKey, selectLocation) => {\n    return function(dispatch){\n        dispatch({\n            type: SET_LOCATION,\n            payload: {\n                location: selectLocation.location, \n                lKey, \n                selectLocation, \n                search: selectLocation.name + ' - ' + selectLocation.location.location.formatted_address\n            }\n        });\n    }\n}\n\nexport const clearMessage = () => {\n    return function(dispatch){\n        dispatch({\n            type: CLEAR_MESSAGE\n        });\n    }\n}\n\nexport const setMessage = (message) => {\n    return function(dispatch){\n        dispatch({\n            type: SET_MESSAGE,\n            message: message\n        });\n    }\n}","/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/actions/types.js",[],"/Users/katehilton/Desktop/Learning/ReactHooks/google-maps-app/client/src/components/firebase.js",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":1,"message":"97","line":20,"column":12,"nodeType":"98","messageId":"99","endLine":20,"endColumn":15},{"ruleId":"96","severity":1,"message":"100","line":21,"column":12,"nodeType":"98","messageId":"99","endLine":21,"endColumn":16},{"ruleId":"96","severity":1,"message":"101","line":9,"column":12,"nodeType":"98","messageId":"99","endLine":9,"endColumn":18},{"ruleId":"102","severity":1,"message":"103","line":13,"column":10,"nodeType":"104","endLine":13,"endColumn":12,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":8,"column":27,"nodeType":"108","messageId":"109","endLine":8,"endColumn":29},{"ruleId":"110","severity":1,"message":"111","line":27,"column":43,"nodeType":"108","messageId":"112","endLine":27,"endColumn":44},{"ruleId":"106","severity":1,"message":"107","line":80,"column":57,"nodeType":"108","messageId":"109","endLine":80,"endColumn":59},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'maps' is assigned a value but never used.","'loaded' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getLocations'. Either include it or remove the dependency array. If 'getLocations' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["115"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"116","fix":"117"},"Update the dependencies array to be: [getLocations]",{"range":"118","text":"119"},[417,419],"[getLocations]"]